# ========= EVM Methods ==============
eth_getBlock:
  allOf:
  - type: object
    properties:
      params:
        type: array
        description: | 
          One of the following:
          1. String - Hash associated with the block
          2. Number - Number associated with the block
eth_getLogs:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
eth_getTransactionByHash:
  allOf:
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
eth_getTransactionReceipt:
  allOf:
    - $ref: '#/transactionHash_param'
    - type: object
      properties:
eth_getBlockTransactionCountByHash:
  allOf:
    - $ref: '#/blockHash_param'
    - type: object
      properties:
eth_getBlockTransactionCountByNumber:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          $ref: '#/blockNumber_or_blocktag_param_eth'
eth_getTransactionCount:
  allOf:
    - $ref: '#/address_and_blockNumber_param_eth'
    - type: object
      properties:
eth_getTransactionByBlockHashAndIndex:
  allOf:
    - $ref: '#/blockHash_and_index_param'
    - type: object
      properties:
eth_getTransactionByBlockNumberAndIndex:
  allOf:
    - $ref: '#/blockNumber_and_index_param_eth'
    - type: object
      properties:
eth_getBlockReceipts:
  allOf:
    - $ref: '#/blockNumber_or_blockHash_param_eth'
    - type: object
      properties:
eth_sendRawTransaction:
  allOf:
    - $ref: '#/signed_transaction_param'
    - type: object
      properties:
eth_sendPrivateTransaction:
  type: array
  minItems: 1
  maxItems: 1
  items:
    type: object
    required:
      - tx
    properties:
      method:
        type: string
        default: eth_sendPrivateTransaction
        enum:
          - eth_sendPrivateTransaction
      tx:
        type: string
        description: 'Raw, signed transaction'
      maxBlockNumber:
        type: string
        description: Hex-encoded number for highest block number in which the transaction should be included.
      preferences:
        type: object
        properties:
          fast:
            type: boolean
            description: Sends transaction with fast mode when true.
eth_cancelPrivateTransaction:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              txHash:
                type: string
                description: Transaction hash for private transaction to be cancelled.
waitForTransaction: 
  allOf: 
    - type: object
      properties: 
        transactionHash: 
          type: string
          description: The hash of the transaction to wait for.
        confirmations: 
          type: number
          description: The number of blocks to wait for.
        timeout: 
          type: number
          description: The maximum time to wait for the transaction to confirm.
eth_getBalance:
  allOf:
    - $ref: '#/address_and_blockNumber_param_eth'
    - type: object
      properties:
eth_getStorageAt:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: |
            1. String - 20 Bytes - address of the storage 
            2. String - Integer of the slot position in the storage (in hex)
            3. String - Either the hex value of a **block number** OR One of the following **block tags**: 
              * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
              * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
              * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
              * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
              * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
          minItems: 3
          maxItems: 3
          items:
            type: string
eth_getCode:
  allOf:
    - $ref: '#/address_and_blockNumber_param_eth'
    - type: object
      properties:
eth_accounts:
  allOf:
    - type: object
      properties:
eth_getProof:
  allOf:
    - type: object
      properties:
        params:
          description: | 
            1. String - 20 Bytes - Address of the account
            2. Array - 32 Bytes - array of storage-keys which should be proofed and included
            3. String - Either the hex value of a **block number** OR One of the following **block tags**: 
              * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
              * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
              * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
              * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
              * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
          type: array
          minItems: 3
          maxItems: 3
          items:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
eth_protocolVersion:
  allOf:
    - type: object
      properties:
eth_gasPrice:
  allOf:
    - type: object
      properties:
eth_estimateGas_550:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/blockNumber_or_blocktag_param_eth'
sdk_send: 
  allOf: 
    - type: object
      properties: 
        method: 
          type: string
          description: The method to call.
        params: 
          type: array
          description: The parameters to pass to the method.

eth_estimateGas_5:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/blockNumber_or_blocktag_param_eth'
eth_estimateGas_50:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/blockNumber_or_blocktag_param_eth'

findContractDeployer:
  allOf:
    - type: object
      properties:
        contractAddress:
          type: string
          description: The contract address to find the deployer for.

eth_feeHistory:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            required:
              - BLOCKCOUNT
              - NEWESTBLOCK
            properties:
              BLOCKCOUNT:
                type: integer
                description: Number of blocks in the requested range. Between 1 and 1024 blocks can be requested in a single query. Less than requested may be returned if not all blocks are available.
              NEWESTBLOCK:
                type: integer
                format: int64
                description: Highest number block of the requested range.
              REWARDPERCENTILES:
                type: array
                description: "A monotonically increasing list of percentile values to sample from each block's effective priority fees per gas in ascending order, weighted by gas used."
                items:
                  type: number
eth_maxPriorityFeePerGas:
  allOf:
    - type: object
      properties:
eth_chainId:
  allOf:
    - type: object
      properties:
net_version:
  allOf:
    - type: object
      properties:
net_listening:
  allOf:
    - type: object
      properties:
eth_getUncleByBlockHashAndIndex:
  allOf:
    - $ref: '#/blockHash_uncleIndex_param'
    - type: object
      properties:
eth_getUncleByBlockNumberAndIndex:
  allOf:
    - $ref: '#/blockNumber_uncleIndex_param_eth'
    - type: object
      properties:
eth_getUncleCountByBlockHash:
  allOf:
    - $ref: '#/blockHash_param'
    - type: object
      properties:
eth_getUncleCountByBlockNumber:
  allOf:
    - $ref: '#/blockNumber_or_blocktag_param_eth'
    - type: object
      properties:
eth_getFilterChanges:
  allOf:
    - $ref: '#/filterId_param'
    - type: object
      properties:
eth_getFilterLogs:
  allOf:
    - $ref: '#/filterId_param'
    - type: object
      properties:
eth_newBlockFilter:
  allOf:
    - type: object
      properties:
eth_newFilter:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/filter_options'
eth_newPendingTransactionFilter:
  allOf:
    - type: object
      properties:
eth_uninstallFilter:
  allOf:
    - $ref: '#/filterId_param'
    - type: object
      properties:
web3_clientVersion:
  allOf:
    - type: object
      properties:
web3_sha3:
  allOf:
    - $ref: '#/shaHash_param'
    - type: object
      properties:
eth_getTransactionReceiptsByBlock:
  allOf:
    - $ref: '#/blockNumber_or_blockHash_param_l2'
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: block_number in hex OR block_hash.
          items:
            type: string
eth_syncing:
  allOf:
    - type: object
      properties:

# ============= Transaction Receipts API Method ===============
alchemy_getTransactionReceipts_param:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: 'The api only takes in one parameter - an object with at least a blockNumber or blockHash. If both are provided, blockHash is prioritized.'
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              blockNumber:
                type: string
                description: The block number you want to get transaction receipts for, in hex
                pattern: '^0[xX][0-9a-fA-F]+$'
              blockHash:
                type: string
                description: The block hash you want to get transaction receipts for

# ============= Token API Methods ===============
alchemy_getTokenAllowance:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: null
          minItems: 1
          maxItems: 1
          items:
            type: object
            required:
              - contract
              - owner
              - spender
            properties:
              contract:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token contract.'
              owner:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token owner.'
              spender:
                type: string
                description: 'String - DATA, 20 Bytes - The address of the token spender.'
alchemy_getTokenBalances:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: |
            - DATA, 20 Bytes - The address for which token balances will be checked.
            - OneOf
              - Array - A list of contract addresses. Suggested limit: 100 addresses
              - The String ''DEFAULT_TOKENS'' - denotes a query for the top 100 tokens by 24 hour volume - only available on Mainnet for Ethereum, Polygon, and Arbitrum.
              - The String ''erc20'' - denotes the set of erc20 tokens that the address has ever held.
          minItems: 2
          maxItems: 3
          items:
            allOf:
              - type: string
              - oneOf:
                  - type: array
                    minItems: 1
                    maxItems: 100
                    items:
                      type: string
                  - type: string
                    enum:
                      - DEFAULT_TOKENS
                      - erc20
              - type: object
                properties:
                  pageKey:
                    type: string
                    description: 'An address used for pagination. If more results are available, a pageKey will be returned in the response.'
                    default: '0x0'
alchemy_getTokenMetadata:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: 'DATA, 20 Bytes - Singluar address for the token contract.'
          minItems: 1
          maxItems: 1
          items:
            type: string

# ============= Trace API Methods ===============
trace_call:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/transaction_object'
                description: Call options.
              - type: array
                description: 'Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
                  enum:
                    - trace
                    - stateDiff
              - $ref: '#/blockNumber_or_blocktag_param_eth'
trace_rawTransaction:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Raw transaction data.
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_replayBlockTransactions:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            oneOf:
              - $ref: '#/blockNumber_or_blocktag_param_eth'
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_replayTransaction:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: 'Array - Type of trace, one or more of "trace" or "stateDiff".'
                items:
                  type: string
trace_block:
  allOf:
    - type: object
      properties:
        params:
          type: array
          description: |
            Array of HEX String.
            </br>The following options are possible for the defaultBlock parameter. 
            - An integer block number (in hex)
            - String 'earliest' for the earliest/genesis block. String 'latest' - for the latest mined block. String 'pending' - for the pending state/transactions.
          items:
            $ref: '#/blockNumber_or_blocktag_param_eth'
trace_filter:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: object
            properties:
              fromBlock:
                type: string
                description: From this block
              toBlock:
                type: string
                description: To this block.
              fromAddress:
                type: string
                description: Sent from these addresses.
              toAddress:
                type: string
                description: Sent to these addresses.
              after:
                type: string
                description: The offset trace number.
              count:
                type: integer
                description: Integer number of traces to display in a batch.
trace_get:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            oneOf:
              - type: string
                description: Hash - Transaction hash.
              - type: array
                description: Array - Index positions of the traces.
                items:
                  type: string
trace_transaction:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            type: string
            description: Hash - Transaction hash.

# ============= Polygon API Methods ===============
bor_getAuthor:
  allOf:
    - type: object
      properties:
        params:
          description: Array of block number (in hexadecimal format).
          type: array
          items:
            type: string
bor_getCurrentValidators:
  allOf:
    - type: object
      properties:
bor_getCurrentProposer:
  allOf:
    - type: object
      properties:
bor_getRootHash:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getRootHash:
  allOf:
    - type: object
      properties:
        params:
          type: array
          items:
            type: object
            properties:
              from:
                type: integer
                description: Block number (in int format).
              to:
                type: integer
                description: Block number (in int format).
eth_getSignersAtHash:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          description: Blockhash.
          items:
            type: string

# ============= Transfers API Methods ===============
alchemy_getAssetTransfers:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/getAssetTransfers_eth_mainnet'

# ============= Transfers API Models ===============
getAssetTransfers_eth_mainnet:
  type: object
  required:
    - category
  properties:
    fromBlock:
      type: string
      description: 'String - Inclusive from block (hex string, int, or latest)'
      default: '0x0'
    toBlock:
      type: string
      description: 'String - Inclusive to block (hex string, int, or latest)'
      default: latest
    fromAddress:
      type: string
      description: String - From address (hex string). Default wildcard - any address
    toAddress:
      type: string
      description: String - To address (hex string). Default wildcard - any address
    contractAddresses:
      type: array
      description: 'String - List of contract addresses (hex strings) to filter for - only applies to "erc20", "erc721", "erc1155" transfers. Default wildcard - any address'
      items:
        type: string
    category:
      type: array
      description: |
        'Array of categories, can be any of the following: "external", "internal", "erc20", "erc721", "erc1155", or "specialnft". See the table above for supported categories on each network.'
      items:
        type: string
        enum:
          - external
          - internal
          - erc20
          - erc721
          - erc1155
          - specialnft
    order:
      type: string
      description: |
        String - Whether to return results in ascending (`asc`) or descending (`desc`) order. Ascending order is from oldest to newest transactions, decending order is from newest to oldest. Defaults to "asc" if omitted.
      enum:
        - asc
        - desc
    withMetadata:
      type: boolean
      description: Boolean - Whether or not to include additional metadata about each transfer event.
      default: false
    excludeZeroValue:
      type: boolean
      description: Boolean - A boolean to exclude transfers with zero value. Zero value is not the same as null value.
      default: true
    maxCount:
      type: string
      description: Max hex string number of results to return per call.
      default: '0x3e8'
    pageKey:
      type: string
      description: 'String - UUID for pagination. If more results are available, a uuid pageKey will be returned in the response. Pass that uuid into pageKey to fetch the next 1000 or maxCount.'

# ============= Debug API Methods ===============
debug_traceTransaction:
  allOf:
    - type: object
      properties:
        disableStorage:
          type: boolean
          default: false
          description: 'Setting this to true will disable storage capture (default = false).'
        disableMemory:
          type: boolean
          default: false
          description: 'Setting this to true will disable memory capture (default = false).'
        disableStack:
          type: boolean
          default: false
          description: 'Setting this to true will disable stack capture (default = false).'
        tracer:
          type: string
          description: 'Setting this will enable JavaScript-based transaction tracing, described below. If set, the previous four arguments will be ignored.'
        timeout:
          type: string
          description: 'Overrides the default timeout of 5 seconds for JavaScript-based tracing calls. Valid values are described <a href="https://golang.org/pkg/time/#ParseDuration">here</a>.'

# ============ EVM Models ==============
common_request_fields:
  type: object
  properties:
    id:
      type: integer
      default: 1
    jsonrpc:
      type: string
      default: '2.0'
filter_options:
  type: object
  properties:
    blockHash:
      type: string
      description: 'Using blockHash is equivalent to fromBlock = toBlock = the block number with hash blockHash. If blockHash is present in the filter criteria, then neither fromBlock nor toBlock are allowed.'
    address:
      type: array
      items:
        type: string
      description: Contract address or a list of addresses from which logs should originate.
    fromBlock:
      $ref: '#/blockNumber_or_blocktag_param_eth'
      default: latest
    toBlock:
      $ref: '#/blockNumber_or_blocktag_param_eth'
      default: latest
    topics:
      $ref: '#/topics'
topics:
  type: array
  description: Array of 32 Bytes DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.
  items:
    type: string
eth_call_550_gas:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_550'
              - $ref: '#/blockNumber_or_blocktag_param_eth'
eth_call_5_gas:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_5'
              - $ref: '#/blockNumber_or_blocktag_param_eth'
eth_call_50_gas:
  allOf:
    - type: object
      properties:
        params:
          type: array
          minItems: 2
          maxItems: 2
          items:
            oneOf:
              - allOf:
                  - $ref: '#/transaction_object'
                  - $ref: '#/gas_50'
              - $ref: '#/blockNumber_or_blocktag_param_eth'
transaction_object:
  type: object
  description: The transaction call object
  properties:
    from:
      type: string
      description: 20 Bytes - The address the transaction is sent from.
    to:
      type: string
      description: 20 Bytes - The address the transaction is directed to
    gasPrice:
      type: string
      description: |
        Integer of the gasPrice used for each paid gas.
        <br/><strong>NOTE:</strong> most of our users <b>(95%+)</b> never set the gasPrice on eth_call.
    value:
      type: string
      description: Integer of the value sent with this transaction
    data:
      type: string
      description: Hash of the method signature and encoded parameters
  required:
    - to
gas_50:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>50</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_5:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>5</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
gas_550:
  type: object
  properties:
    gas:
      type: string
      description: |
        Integer of the gas provided for the transaction execution. eth_call consumes zero gas, but this parameter may be needed by some executions. 
        </br><strong> NOTE: </strong>this parameter has a cap of <b>550</b> Million gas per request. Reach out to us at support@alchemy.com if you want to increase this limit!
transactionHash_param:
  type: object
  properties:
    params:
      type: array
      description: String - 32 Bytes - Hash of a transaction
      minItems: 1
      maxItems: 1
      items:
        type: string
blockHash_param:
  type: object
  properties:
    params:
      type: array
      description: String - 32 Bytes - Hash of a block
      minItems: 1
      maxItems: 1
      items:
        type: string
blockHash_and_index_param:
  type: object
  properties:
    params:
      type: array
      description: |
        1. String - 32 Bytes - Hash of a block 
        2. String - Integer of the transaction index position (in hex).
      minItems: 2
      maxItems: 2
      items:
        type: string
signed_transaction_param:
  type: object
  properties:
    params:
      type: array
      description: String - The signed transaction data.
      minItems: 1
      maxItems: 1
      items:
        type: string
blockHash_uncleIndex_param:
  type: object
  properties:
    params:
      type: array
      description: |
        1. String - 32 Bytes - Hash of a block 
        2. String - The uncle''s index position (in hex)
      minItems: 2
      maxItems: 2
      items:
        type: string
filterId_param:
  type: object
  properties:
    params:
      type: array
      description: String - The filter id.
      minItems: 1
      maxItems: 1
      items:
        type: string
shaHash_param:
  type: object
  properties:
    params:
      type: array
      description: String - The data in hex form to convert into a SHA3 hash.
      minItems: 1
      maxItems: 1
      items:
        type: string
        pattern: '^0[xX][0-9a-fA-F]+$'


# ======= Definitions for blockNumber methods ==========
# After the merge, Ethereum offers more block tags than other EVM chains so we separated them out

blockNumber_or_blocktag_param_eth:
  type: string
  description: | 
    String - Either the hex value of a **block number** OR One of the following **block tags**: 
      * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
      * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
      * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
      * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
      * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
blockNumber_or_blocktag_param_l2:
  type: string
  description: | 
    String - Either the hex value of a **block number** OR One of the following **block tags**: 
      * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
      * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
      * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
address_and_blockNumber_param_eth:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - 20 Bytes - Address
        2. String - Either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
            * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
      minItems: 2
      maxItems: 2
      items:
        type: string
address_and_blockNumber_param_l2:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - 20 Bytes - Address
        2. String - Either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
      minItems: 2
      maxItems: 2
      items:
        type: string
blockNumber_and_index_param_eth:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
            * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
        2. String - The transaction index position (in hex)
      minItems: 2
      maxItems: 2
      items:
        type: string
blockNumber_and_index_param_eth_l2:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
        2. String - The transaction index position (in hex)
      minItems: 2
      maxItems: 2
      items:
        type: string
blockNumber_or_blockHash_param_eth:
  type: object
  properties:
    params:
      type: array
      description: | 
        String - One of the following options:
          1. **block hash** 
          2. **block number** (in hex)
          3. One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
            * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.      
      minItems: 1
      maxItems: 1
      items:
        type: string
blockNumber_or_blockHash_param_l2:
  type: object
  properties:
    params:
      type: array
      description: | 
        String - One of the following options:
          1. **block hash** 
          2. **block number** (in hex)
          3. One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.      
      minItems: 1
      maxItems: 1
      items:
        type: string
blockNumber_uncleIndex_param_eth:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `safe` - The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is “unlikely” to be re-orged. **Only available on Ethereum Goerli**.
            * `finalized` - The most recent crypto-economically secure block, that has been accepted by >2/3 of validators. Cannot be re-orged outside of manual intervention driven by community coordination. Intuitively, this block is very unlikely to be re-orged. **Only available on Ethereum Goerli**.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
        2. String - The uncle''s index position (in hex)
      minItems: 2
      maxItems: 2
      items:
        type: string
blockNumber_uncleIndex_param_l2:
  type: object
  properties:
    params:
      type: array
      description: | 
        1. String - either the hex value of a **block number** OR One of the following **block tags**: 
            * `pending` - A sample next block built by the client on top of latest and containing the set of transactions usually taken from local mempool. Intuitively, you can think of these as blocks that have not been mined yet.
            * `latest` - The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions.
            * `earliest` - The lowest numbered block the client has available. Intuitively, you can think of this as the first block created.
        2. String - The uncle''s index position (in hex)
      minItems: 2
      maxItems: 2
      items:
        type: string